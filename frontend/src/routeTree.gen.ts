/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSuppliersImport } from './routes/_layout/suppliers'
import { Route as LayoutSuppliercontactsImport } from './routes/_layout/suppliercontacts'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutProjectsImport } from './routes/_layout/projects'
import { Route as LayoutPaymentsfromcustomersImport } from './routes/_layout/paymentsfromcustomers'
import { Route as LayoutPaymentsToSuppliersImport } from './routes/_layout/paymentsToSuppliers'
import { Route as LayoutPartsImport } from './routes/_layout/parts'
import { Route as LayoutInternalinvoicesImport } from './routes/_layout/internalinvoices'
import { Route as LayoutExternalinvoicesImport } from './routes/_layout/externalinvoices'
import { Route as LayoutCustomersImport } from './routes/_layout/customers'
import { Route as LayoutCustomercontactsImport } from './routes/_layout/customercontacts'
import { Route as LayoutAdminImport } from './routes/_layout/admin'

// Create/Update Routes

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSuppliersRoute = LayoutSuppliersImport.update({
  path: '/suppliers',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSuppliercontactsRoute = LayoutSuppliercontactsImport.update({
  path: '/suppliercontacts',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProjectsRoute = LayoutProjectsImport.update({
  path: '/projects',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPaymentsfromcustomersRoute =
  LayoutPaymentsfromcustomersImport.update({
    path: '/paymentsfromcustomers',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutPaymentsToSuppliersRoute = LayoutPaymentsToSuppliersImport.update({
  path: '/paymentsToSuppliers',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPartsRoute = LayoutPartsImport.update({
  path: '/parts',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutInternalinvoicesRoute = LayoutInternalinvoicesImport.update({
  path: '/internalinvoices',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutExternalinvoicesRoute = LayoutExternalinvoicesImport.update({
  path: '/externalinvoices',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCustomersRoute = LayoutCustomersImport.update({
  path: '/customers',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCustomercontactsRoute = LayoutCustomercontactsImport.update({
  path: '/customercontacts',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_layout/admin': {
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/customercontacts': {
      preLoaderRoute: typeof LayoutCustomercontactsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/customers': {
      preLoaderRoute: typeof LayoutCustomersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/externalinvoices': {
      preLoaderRoute: typeof LayoutExternalinvoicesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/internalinvoices': {
      preLoaderRoute: typeof LayoutInternalinvoicesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/parts': {
      preLoaderRoute: typeof LayoutPartsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/paymentsToSuppliers': {
      preLoaderRoute: typeof LayoutPaymentsToSuppliersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/paymentsfromcustomers': {
      preLoaderRoute: typeof LayoutPaymentsfromcustomersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects': {
      preLoaderRoute: typeof LayoutProjectsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/suppliercontacts': {
      preLoaderRoute: typeof LayoutSuppliercontactsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/suppliers': {
      preLoaderRoute: typeof LayoutSuppliersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutAdminRoute,
    LayoutCustomercontactsRoute,
    LayoutCustomersRoute,
    LayoutExternalinvoicesRoute,
    LayoutInternalinvoicesRoute,
    LayoutPartsRoute,
    LayoutPaymentsToSuppliersRoute,
    LayoutPaymentsfromcustomersRoute,
    LayoutProjectsRoute,
    LayoutSettingsRoute,
    LayoutSuppliercontactsRoute,
    LayoutSuppliersRoute,
    LayoutIndexRoute,
  ]),
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
])

/* prettier-ignore-end */
